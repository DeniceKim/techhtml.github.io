{"version":3,"sources":["webpack:///path---docs-faq-state-html-e900c03d860d93339676.js","webpack:///./.cache/json/docs-faq-state-html.json"],"names":["webpackJsonp","791","module","exports","data","markdownRemark","html","frontmatter","title","next","prev","fields","path","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,4yTAA0iSC,aAAilCC,MAAA,kBAAAC,KAAA,KAAAC,KAAA,MAAkDC,QAAWC,KAAA,oBAAAC,KAAA,yBAA0DC,aAAgBD,KAAA","file":"path---docs-faq-state-html-e900c03d860d93339676.js","sourcesContent":["webpackJsonp([162928419175508],{\n\n/***/ 791:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h3 id=\\\"what-does-setstate-do\\\"><a href=\\\"#what-does-setstate-do\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>What does setState do?</h3>\\n<p><code>setState()</code> schedules an update to a component’s <code>state</code> object. When state changes, the component responds by re-rendering.</p>\\n<h3 id=\\\"what-is-the-difference-between-state-and-props\\\"><a href=\\\"#what-is-the-difference-between-state-and-props\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>What is the difference between state and props?</h3>\\n<p><a href=\\\"/docs/components-and-props.html\\\"><code>props</code></a> (short for “properties”) and <a href=\\\"/docs/state-and-lifecycle.html\\\"><code>state</code></a> are both just JavaScript objects that trigger a re-render when changed. While both hold information that influences the output of render, they are different in one important way: <code>props</code> get passed to the component (similar to function parameters) whereas <code>state</code> is managed within the component (similar to variables declared within a function).</p>\\n<p>Here are some good resources for further reading on when to use <code>props</code> vs <code>state</code>:</p>\\n<ul>\\n<li><a href=\\\"https://github.com/uberVU/react-guide/blob/master/props-vs-state.md\\\">Props vs State</a></li>\\n<li><a href=\\\"http://lucybain.com/blog/2016/react-state-vs-pros/\\\">ReactJS: Props vs. State</a></li>\\n</ul>\\n<h3 id=\\\"why-is-setstate-is-giving-me-the-wrong-value\\\"><a href=\\\"#why-is-setstate-is-giving-me-the-wrong-value\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Why is <code>setState</code> is giving me the wrong value?</h3>\\n<p>Calls to <code>setState</code> are asynchronous - don’t rely on <code>this.state</code> to reflect the new value immediately after calling <code>setState</code>. Pass an updater function instead of an object if you need compute values based on the current state (see below for details).</p>\\n<p>Example of code that will not behave as expected:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">incrementCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Note: this will *not* work as intended.</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">handleSomething</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// this.state.count is 1, then we do this:</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">incrementCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">incrementCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// state wasn't updated yet, so this sets 2 not 3</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>See below for how to fix this problem.</p>\\n<h3 id=\\\"how-do-i-update-state-with-values-that-depend-on-the-current-state\\\"><a href=\\\"#how-do-i-update-state-with-values-that-depend-on-the-current-state\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>How do I update state with values that depend on the current state?</h3>\\n<p>Pass a function instead of an object to setState to ensure the call always uses the most updated version of state (see below). </p>\\n<h3 id=\\\"what-is-the-difference-between-passing-an-object-or-a-function-in-setstate\\\"><a href=\\\"#what-is-the-difference-between-passing-an-object-or-a-function-in-setstate\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>What is the difference between passing an object or a function in setState?</h3>\\n<p>Passing an update function allows you to access the current state value inside the updater. Since <code>setState</code> calls are batched, this lets you chain updates and ensure they build on top of each other instead of conflicting:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">incrementCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>prevState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">:</span> prevState<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">handleSomething</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// this.state.count is 1, then we do this:</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">incrementCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">incrementCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// count is now 3</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><a href=\\\"/docs/react-component.html#setstate\\\">Learn more about setState</a></p>\\n<h3 id=\\\"should-i-use-a-state-management-library-like-redux-or-mobx\\\"><a href=\\\"#should-i-use-a-state-management-library-like-redux-or-mobx\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Should I use a state management library like Redux or MobX?</h3>\\n<p><a href=\\\"http://redux.js.org/docs/faq/General.html#general-when-to-use\\\">Maybe.</a></p>\\n<p>It’s a good idea to get to know React first, before adding in additional libraries. You can build quite complex applications using only React.</p>\",\"frontmatter\":{\"title\":\"Component State\",\"next\":null,\"prev\":null},\"fields\":{\"path\":\"docs/faq-state.md\",\"slug\":\"docs/faq-state.html\"}}},\"pathContext\":{\"slug\":\"docs/faq-state.html\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-faq-state-html-e900c03d860d93339676.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h3 id=\\\"what-does-setstate-do\\\"><a href=\\\"#what-does-setstate-do\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>What does setState do?</h3>\\n<p><code>setState()</code> schedules an update to a component’s <code>state</code> object. When state changes, the component responds by re-rendering.</p>\\n<h3 id=\\\"what-is-the-difference-between-state-and-props\\\"><a href=\\\"#what-is-the-difference-between-state-and-props\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>What is the difference between state and props?</h3>\\n<p><a href=\\\"/docs/components-and-props.html\\\"><code>props</code></a> (short for “properties”) and <a href=\\\"/docs/state-and-lifecycle.html\\\"><code>state</code></a> are both just JavaScript objects that trigger a re-render when changed. While both hold information that influences the output of render, they are different in one important way: <code>props</code> get passed to the component (similar to function parameters) whereas <code>state</code> is managed within the component (similar to variables declared within a function).</p>\\n<p>Here are some good resources for further reading on when to use <code>props</code> vs <code>state</code>:</p>\\n<ul>\\n<li><a href=\\\"https://github.com/uberVU/react-guide/blob/master/props-vs-state.md\\\">Props vs State</a></li>\\n<li><a href=\\\"http://lucybain.com/blog/2016/react-state-vs-pros/\\\">ReactJS: Props vs. State</a></li>\\n</ul>\\n<h3 id=\\\"why-is-setstate-is-giving-me-the-wrong-value\\\"><a href=\\\"#why-is-setstate-is-giving-me-the-wrong-value\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Why is <code>setState</code> is giving me the wrong value?</h3>\\n<p>Calls to <code>setState</code> are asynchronous - don’t rely on <code>this.state</code> to reflect the new value immediately after calling <code>setState</code>. Pass an updater function instead of an object if you need compute values based on the current state (see below for details).</p>\\n<p>Example of code that will not behave as expected:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">incrementCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Note: this will *not* work as intended.</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">handleSomething</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// this.state.count is 1, then we do this:</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">incrementCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">incrementCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// state wasn't updated yet, so this sets 2 not 3</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>See below for how to fix this problem.</p>\\n<h3 id=\\\"how-do-i-update-state-with-values-that-depend-on-the-current-state\\\"><a href=\\\"#how-do-i-update-state-with-values-that-depend-on-the-current-state\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>How do I update state with values that depend on the current state?</h3>\\n<p>Pass a function instead of an object to setState to ensure the call always uses the most updated version of state (see below). </p>\\n<h3 id=\\\"what-is-the-difference-between-passing-an-object-or-a-function-in-setstate\\\"><a href=\\\"#what-is-the-difference-between-passing-an-object-or-a-function-in-setstate\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>What is the difference between passing an object or a function in setState?</h3>\\n<p>Passing an update function allows you to access the current state value inside the updater. Since <code>setState</code> calls are batched, this lets you chain updates and ensure they build on top of each other instead of conflicting:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"gatsby-code-jsx\\\"><code><span class=\\\"token function\\\">incrementCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>prevState<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>count<span class=\\\"token punctuation\\\">:</span> prevState<span class=\\\"token punctuation\\\">.</span>count <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">handleSomething</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// this.state.count is 1, then we do this:</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">incrementCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">incrementCount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// count is now 3</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p><a href=\\\"/docs/react-component.html#setstate\\\">Learn more about setState</a></p>\\n<h3 id=\\\"should-i-use-a-state-management-library-like-redux-or-mobx\\\"><a href=\\\"#should-i-use-a-state-management-library-like-redux-or-mobx\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Should I use a state management library like Redux or MobX?</h3>\\n<p><a href=\\\"http://redux.js.org/docs/faq/General.html#general-when-to-use\\\">Maybe.</a></p>\\n<p>It’s a good idea to get to know React first, before adding in additional libraries. You can build quite complex applications using only React.</p>\",\"frontmatter\":{\"title\":\"Component State\",\"next\":null,\"prev\":null},\"fields\":{\"path\":\"docs/faq-state.md\",\"slug\":\"docs/faq-state.html\"}}},\"pathContext\":{\"slug\":\"docs/faq-state.html\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-faq-state-html.json\n// module id = 791\n// module chunks = 162928419175508"],"sourceRoot":""}